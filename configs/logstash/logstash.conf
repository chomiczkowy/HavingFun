input {
	file {
		type => "LoginApiLog"
		path => ["D:/logs/having-fun-api-login-*.log"]
		start_position => "beginning"
	}

	file {
			type => "MainApiLog"
			path => ["D:/logs/having-fun-api-main-*.log"]
			start_position => "beginning"
		}
		
	file {
		type => "AdminApiLog"
		path => ["D:/logs/having-fun-api-admin-*.log"]
		start_position => "beginning"
	}
	
	file {
		type => "ShopApiLog"
		path => ["D:/logs/having-fun-api-shop-*.log"]
		start_position => "beginning"
	}
}

filter {

	# ignore log comments
	if [message] =~ "^#" {
		drop {}
	}

    grok {
        match => ["message", "%{TIMESTAMP_ISO8601:log_timestamp}\|%{GREEDYDATA:useragent}\|%{NOTSPACE:level}\|%{GREEDYDATA:message}\|%{NOTSPACE:iis_site_name}\|%{NOTSPACE:url}\|%{NOTSPACE:mvc_controller}\|%{NOTSPACE:mvc_action}\|%{IP:client_ip}\|%{NOTSPACE:method}"]	
	}

    # https://www.elastic.co/guide/en/logstash/current/plugins-filters-date.html
    date {
        match => [ "log_timestamp", "YYYY-MM-dd HH:mm:ss.SSSS" ]
        timezone => "Europe/Warsaw"
    }
    
    # https://www.elastic.co/guide/en/logstash/current/plugins-filters-useragent.html
    useragent {
        source => "useragent"
        prefix => "browser_"
    }
    
    mutate {
        remove_field => [ "log_timestamp"]
    }
	
	if [type] == "LoginApiLog" {
		mutate {
			 add_field => {
				"API" => "LOGIN"
			 }
		}
	}
		
	if [type] == "MainApiLog" {
		mutate {
			 add_field => {
				"API" => "MAIN"
			 }
		 }
	}
		
	if [type] == "AdminApiLog" {
		mutate {
			 add_field => {
				"API" => "ADMIN"
			 }
		 }
	}
		
	if [type] == "ShopApiLog" {
		mutate {
			 add_field => {
				"API" => "SHOP"
			 }
		 }
	}
}

# output logs to console and to elasticsearch
output {

	stdout { codec => rubydebug }
	
	elasticsearch {
		hosts => ["localhost:9200"]
	}	
}